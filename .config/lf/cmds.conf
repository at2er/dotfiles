# vim:ft=lf
## Thanks: unixchad
##   https://codeberg.org/unixchad/dotfiles/src/branch/master/.config/lf/lfrc
## License: See LISCENSE.unixchad-dotfiles

cmd bulk-rename ${{
	old="$(mktemp)"
	new="$(mktemp)"
	if [ -n "$fs" ]; then
		fs="$(basename -a -- $fs)"
	else
		fs="$(ls)"
	fi
	printf '%s\n' "$fs" > "$old"
	printf '%s\n' "$fs" > "$new"
	$EDITOR "$new"
	[ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
	paste "$old" "$new" | while IFS= read -r names; do
		src="$(printf '%s' "$names" | cut -f1)"
		dst="$(printf '%s' "$names" | cut -f2)"
		if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
		    continue
		fi
		mv -- "$src" "$dst"
	done
	rm -- "$old" "$new"
	lf -remote "send $id unselect"
}}

cmd fzf-jump ${{
	res="$(find . -maxdepth 1 | sort | fzf --reverse --header="Jump to location")"
	if [ -n "$res" ]; then
		if [ -d "$res" ]; then
			cmd="cd"
		else
			cmd="select"
		fi
		res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
		lf -remote "send $id $cmd \"$res\""
	fi
}}

cmd git-add $git add -- $fx
cmd git-rm ${{
	printf "$fx\ngit rm [y/n] "
	read ans
	[ "$ans" = "y" ] && git rm --cached --force -- $fx
}}
cmd git-status $git status --short $fx | less

cmd link %{{
	set -- $(cat ~/.local/share/lf/files)
	mode="$1"
	shift
	if [ "$#" -lt 1 ]; then
		lf -remote "send $id echoerr no files to link"
		exit
	fi
	case "$mode" in
		# 'copy' mode indicates a symlink
		copy) ln -sr -t . -- "$@";;
		# while 'move' mode indicates a hard link
		move)
			ln -t . -- "$@"
			lf -remote "send clear"
		;;
	esac
}}

cmd mkdir %{{
	IFS=" "
	file="$*"
	mkdir -p -- "$file"
	lf -remote "send $id select \"$(printf '%s' "$file" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
}}

cmd preview-toggle %{{
	if [ "$lf_preview" = true ]; then
		lf -remote "send $id :set preview false; set ratios 1:5"
	else
		lf -remote "send $id :set preview true; set ratios 1:2:3"
	fi
}}

cmd touch %{{
	IFS=" "
	file="$*"
	touch -- "$file"
	lf -remote "send $id select \"$(printf '%s' "$file" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
}}

cmd trash-put ${{
	set -f
	printf "$fx\ntrash-put [y/n] "
	read ans
	[ "$ans" = "y" ] && trash-put $fx
}}

cmd yank-paths $printf '%s' "$fx" | wl-copy
cmd yank-uris $echo "$fx" | sed 's/^\(.\)/file:\/\/\1/g' | wl-copy -t text/uri-list

cmd z %{{
	result="$(zoxide query --exclude "$PWD" "$@" | sed 's/\\/\\\\/g;s/"/\\"/g')"
		lf -remote "send $id cd \"$result\""
}}

cmd zi ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
		lf -remote "send $id cd \"$result\""
}}
